
This repository contains the IMS System submission for the WASSA-2017 Shared Task on Emotion Intensity (EmoInt)
**Task:** Given a **tweet** and an **emotion** x {anger,fear,joy,sadness}, determine the intensity or degree of emotion X felt by the speaker -- a **real-valued score between 0 and 1**.
[The offical shared task paper](http://www.romanklinger.de/publications/emo_ims_kkk.pdf)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Requirements:

-> Weka:	For extracting baseline features and performing the random forest regression
-> Keras:	For building GRU model
-> NLTK:	For Lemmatization and Part-of-speech tagging
-> Some features were created by the Baseline System (**Affective Tweets**), which is an additional weka package.	https://github.com/felipebravom/AffectiveTweets

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Example usage:

-> Place all the tweets, whose intensity is to be found in a text-file "text_plain.txt". Each tweet is to be separated by a newline.
1) Run the file Lem-POST.py:
python Lem-POST.py
This file converts one tweet per line to one-lemma per line, with it's corresponding Part of speech Tag[using WordNet].

2) Run the GRU model
1. Install python 2.7
2. Install virtualenv (sudo apt-get install virtualenv)
3. Create virtualenv
	- virtualenv virtual_env_name
4. Activate virtualenv
	- Source virtual_env_name/bin/activate
5. pip install -r requirements.txt
3) Now we need to train our models.
	1. Go to http://saifmohammad.com/WebPages/EmotionIntensity-SharedTask.html#test
	2. Download four files from Training set
	3. Open each file and add the following as 1st line
		Tweetid	Tweet	Emotion	Rating
	4. Save all four files.
	5. Now we will training our model using these 4 files
	6. Create folder for each emotion(anger, joy, sadness,fear) in models folder
	7. Create test folder and inside test create 3 folders (pred, training, testing).
	8. Create separate testing and training folder in anywhere in your system. We are considering
		Desktop here
	9. Open cnn_gru.py.(Below procedure is to be followed for all four files that we downloaded)
		- Edit line no 59
		- Give path of each file one by one on line no 59 "anger_test.txt". E.g if we training
			model for anger then the path will of the path/to/anger.txt (that we downloaded and updated).
		- Goto line 103 and after "models/" add the emotion. E.g "models/anger/". This will create
			models for anger in models/anger
		- Now, once the code is executed it will created 5 prediction files in pred/test namely
			anger.txt, fear.txt, joy.txt, sadness.txt
		- goto pred/test and open terminal and execute following command:
			paste anger.txt fear.txt joy.txt sadness.txt > Desktop/Training/"emotion_name".txt
		- Repeat above steps for each emotion
		- Now we have models for each emotion in models folder and prediction files generated by
			training models
	10. Now, we will be using testing data and predict intensity
	11. Goto http://saifmohammad.com/WebPages/EmotionIntensity-SharedTask.html#test
	12. Download the four files anger.txt, joy.txt, sadness.txt, fear.txt from Test set(without intensity labels)
	13. Open each file and add the following line:
		- Tweetid	Tweet	Emotion	Rating
	14. Open gru_train_test.py and remove line 77
	15. Remove "float( row["Rating"]" from line 74
	16. Open gru_train_test.py(Below procedure is to be followed for all four files that we downloaded)
		- Edit line 74
		- Give the path of each file one by on on line no 74. E.g "path/to/anger.txt(that we downloaded right now)"
		- load the emotion models on line no 112
		- edit the line "models/emotion_name/"
		- edit line no 114 (remove "3" in that line)
		- Now once, the code is executed it will create 5 prediction file in cnn_lstm/test/pred
		- goto cnn_lstm/test/pred and execute the following command:
			paste anger.txt fear.txt joy.txt sadness.txt > Desktop/Testing/"emotion_name".txt
		- Repeat above steps for each file




python gru.py
This file creates 5 GRU models, and trains them using training data.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


## Citation info
If you use the code or the created feature norms, please [cite the author's paper (Bibtex)](http://www.romanklinger.de/publications/2017_bib.html#Koeper2017) [PDF](http://www.romanklinger.de/publications/emo_ims_kkk.pdf)
 
## Contact info
Contact: maximilian.koeper AT ims.uni-stuttgart.de 

[Project Homepage](http://www.ims.uni-stuttgart.de/data/ims_emoint)
[University Homepage Maximilian](http://www.ims.uni-stuttgart.de/institut/mitarbeiter/koepermn/index.en.html)  
[University Homepage Roman](http://www.ims.uni-stuttgart.de/institut/mitarbeiter/klingern/)  
[University Homepage Evgeny](http://www.ims.uni-stuttgart.de/institut/mitarbeiter/kimey)  